#include <iostream>
using namespace std;

char priority(char a, char b) { //利用矩阵判断运算符优先级
    int i, j;
    char Table[11][11] = {

        {' ','=','+','-','*','/','%','(',')','^','&'},

        {'=','=','<','<','<','<','<','<','<','<','<'},

        {'+','>','>','>','<','<','<','<','>','<','<'},

        {'-','>','>','>','<','<','<','<','>','<','<'},

        {'*','>','>','>','>','>','>','<','>','<','<'},

        {'/','>','>','>','>','>','>','<','>','<','<'},

        {'%','>','>','<','>','>','>','<','>','<','<'},

        {'(','>','<','<','<','<','<','<','=','<','<'},

        {')','>','>','>','>','>','>','=','>','>','>'},

        {'^','>','>','>','>','>','>','<','>','>','>'},

        {'&','>','>','>','>','>','>','<','>','>','>'}

    };  //优先级表格

    for(i=0; i<11; i++)
        if(Table[0][i]==a)  //寻找运算符a
            break;

    for(j=0; j<11; j++) //寻找运算符b
        if(Table[j][0]==b)
            break;
    return Table[j][i];
}



int main()
{
    char a;
    char b;
    a='+';
    b='-';
    cout<<priority('+', '-');
    return 0;
}
